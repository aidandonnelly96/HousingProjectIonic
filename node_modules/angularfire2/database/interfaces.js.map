{"version":3,"sources":["../../../src/database/interfaces.ts"],"names":[],"mappings":"AA8CC,CAAC","file":"interfaces.js","sourceRoot":"","sourcesContent":["import * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs/Observable';\n\nexport type FirebaseOperation = string | firebase.database.Reference | firebase.database.DataSnapshot;\n\nexport interface AngularFireList<T> {\n  query: DatabaseQuery;\n  valueChanges<T>(events?: ChildEvent[]): Observable<T[]>;\n  snapshotChanges(events?: ChildEvent[]): Observable<SnapshotAction[]>;\n  stateChanges(events?: ChildEvent[]): Observable<SnapshotAction>;\n  auditTrail(events?: ChildEvent[]): Observable<SnapshotAction[]>;\n  update(item: FirebaseOperation, data: T): Promise<void>;\n  set(item: FirebaseOperation, data: T): Promise<void>;\n  push(data: T): firebase.database.ThenableReference;\n  remove(item?: FirebaseOperation): Promise<any>;\n}\n\nexport interface AngularFireObject<T> {\n  query: DatabaseQuery;\n  valueChanges<T>(): Observable<T | null>;\n  snapshotChanges<T>(): Observable<SnapshotAction>;\n  update(data: T): Promise<any>;\n  set(data: T): Promise<void>;\n  remove(): Promise<any>;\n}\n\nexport interface FirebaseOperationCases {\n  stringCase: () => Promise<void | any>;\n  firebaseCase?: () => Promise<void | any>;\n  snapshotCase?: () => Promise<void | any>;\n  unwrappedSnapshotCase?: () => Promise<void | any>;\n}\n\nexport type QueryFn = (ref: DatabaseReference) => DatabaseQuery;\nexport type ChildEvent = 'child_added' | 'child_removed' | 'child_changed' | 'child_moved';\nexport type ListenEvent = 'value' | ChildEvent;\n\nexport type SnapshotChange = { \n  event: string; \n  snapshot: DatabaseSnapshot | null; \n  prevKey: string | undefined;\n}\n\nexport interface Action<T> {\n  type: string;\n  payload: T;\n};\n\nexport interface AngularFireAction<T> extends Action<T> {\n  prevKey: string | undefined;\n  key: string | null;\n}\n\nexport interface SnapshotPrevKey {\n  snapshot: DatabaseSnapshot | null;\n  prevKey: string | undefined;\n}\n\nexport type SnapshotAction = AngularFireAction<DatabaseSnapshot | null>;\n\nexport type Primitive = number | string | boolean;\n\nexport type DatabaseSnapshot = firebase.database.DataSnapshot;\nexport type DatabaseReference = firebase.database.Reference;\nexport type DatabaseQuery = firebase.database.Query;\nexport type QueryReference = DatabaseReference | DatabaseQuery;\nexport type PathReference = QueryReference | string;\n"]}