{"version":3,"sources":["../../../src/@ionic-native/plugins/native-page-transitions/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAiBxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CG;AASH,IAAa,qBAAqB;IAAS,yCAAiB;IAA5D;;IAgEA,CAAC;IA/DC;;;;OAIG;IAEH,qCAAK,GAAL,UAAM,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEjE;;;;OAIG;IAEH,oCAAI,GAAJ,UAAK,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEhE;;;;OAIG;IAEH,oCAAI,GAAJ,UAAK,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAGhE;;;;OAIG;IAEH,sCAAM,GAAN,UAAO,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAIlE;;;;OAIG;IAEH,oCAAI,GAAJ,UAAK,OAAgC,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEhE;;;OAGG;IAEH,wDAAwB,GAAxB,cAA2C,MAAM,CAAC,CAAC,CAAC;IAEpD;;;OAGG;IAEH,uDAAuB,GAAvB,cAA0C,MAAM,CAAC,CAAC,CAAC;IAQrD,4BAAC;AAAD,CAhEA,AAgEC,CAhE0C,iBAAiB,GAgE3D;AANM,gCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,oCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAxDA;IADC,OAAO,EAAE;;;;kDACuD;AAQjE;IADC,OAAO,EAAE;;;;iDACsD;AAQhE;IADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;;;;iDACqB;AAShE;IADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE,CAAC;;;;mDACuB;AAUlE;IADC,OAAO,CAAC,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;;;;iDACgC;AAOhE;IADC,OAAO,EAAE;;;;qEAC0C;AAOpD;IADC,OAAO,EAAE;;;;oEACyC;AAxDxC,qBAAqB;IARjC,MAAM,CAAC;QACN,UAAU,EAAE,uBAAuB;QACnC,MAAM,EAAE,2CAA2C;QACnD,SAAS,EAAE,+BAA+B;QAC1C,IAAI,EAAE,mEAAmE;QACzE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;KACjD,CAAC;GAEW,qBAAqB,CAgEjC;SAhEY,qBAAqB","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n\nexport interface NativeTransitionOptions {\n  direction?: string;\n  duration?: number;\n  slowdownfactor?: number;\n  slidePixels?: number;\n  iosdelay?: number;\n  androiddelay?: number;\n  winphonedelay?: number;\n  fixedPixelsTop?: number;\n  fixedPixelsBottom?: number;\n  action?: string;\n  origin?: string;\n  href?: string;\n}\n\n/**\n * @name Native Page Transitions\n * @description\n * The Native Page Transitions plugin uses native hardware acceleration to animate your transitions between views. You have complete control over the type of transition, the duration, and direction.\n *\n * @usage\n * ```typescript\n * import { NativePageTransitions, NativeTransitionOptions } from '@ionic-native/native-page-transitions';\n *\n * constructor(private nativePageTransitions: NativePageTransitions) { }\n *\n * ...\n *\n *\n * // example of adding a transition when a page/modal closes\n * ionViewWillLeave() {\n *\n *  let options: NativeTransitionOptions = {\n *     direction: 'up',\n *     duration: 500,\n *     slowdownfactor: 3,\n *     slidePixels: 20,\n *     iosdelay: 100,\n *     androiddelay: 150,\n *     fixedPixelsTop: 0,\n *     fixedPixelsBottom: 60\n *    };\n *\n *  this.nativePageTransitions.slide(options)\n *    .then(onSuccess)\n *    .catch(onError);\n *\n * }\n *\n *\n * // example of adding a transition when pushing a new page\n * openPage(page: any) {\n *\n *   this.nativePageTransitions.slide(options);\n *   this.navCtrl.push(page);\n *\n * }\n *\n * ```\n */\n@Plugin({\n  pluginName: 'NativePageTransitions',\n  plugin: 'com.telerik.plugins.nativepagetransitions',\n  pluginRef: 'plugins.nativepagetransitions',\n  repo: 'https://github.com/Telerik-Verified-Plugins/NativePageTransitions',\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\n})\n\nexport class NativePageTransitions extends IonicNativePlugin {\n  /**\n   * Perform a slide animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  slide(options: NativeTransitionOptions): Promise<any> { return; }\n\n  /**\n   * Perform a flip animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  flip(options: NativeTransitionOptions): Promise<any> { return; }\n\n  /**\n   * Perform a fade animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova({ platforms: ['iOS', 'Android'] })\n  fade(options: NativeTransitionOptions): Promise<any> { return; }\n\n\n  /**\n   * Perform a slide animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova({ platforms: ['iOS', 'Android'] })\n  drawer(options: NativeTransitionOptions): Promise<any> { return; }\n\n\n\n  /**\n   * Perform a slide animation\n   * @param options {NativeTransitionOptions} Options for the transition\n   * @returns {Promise<any>}\n   */\n  @Cordova({ platforms: ['iOS'] })\n  curl(options: NativeTransitionOptions): Promise<any> { return; }\n\n  /**\n   * Execute pending transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  executePendingTransition(): Promise<any> { return; }\n\n  /**\n   * Cancel pending transition\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  cancelPendingTransition(): Promise<any> { return; }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}